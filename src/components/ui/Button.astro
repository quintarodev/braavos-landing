---
import type { HTMLAttributes } from "astro/types"
import { cva, type VariantProps } from "class-variance-authority"
import { cn } from "../../lib/utils"
import { type ClassValue } from "clsx"
const button = cva("button flex items-center gap-2 font-semibold", {
  variants: {
    colorSchema: {
      primary: "",
    },
    variant: {
      solid: "shadow",
    },
    size: {
      small: ["text-sm", "py-1", "px-2"],
      medium: ["text-base", "py-2", "px-4"],
      large: "text-lg py-3 px-6",
    },
  },
  compoundVariants: [
    {
      variant: "solid",
      colorSchema: "primary",
      size: "large",
      class: " rounded-lg bg-primary shadow-primary/50 text-white",
    },
  ],
})

export interface Props
  extends HTMLAttributes<"button">,
    VariantProps<typeof button> {
  classname?: ClassValue[]
}

/**
 * For Astro components, we recommend setting your defaultVariants within
 * Astro.props (which are `undefined` by default)
 */
const {
  colorSchema = "primary",
  size = "large",
  variant = "solid",
  classname = [],
} = Astro.props
---

<button class={cn(button({ colorSchema, size, variant }), ...classname)}>
  <slot />
</button>
